<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>服务器、域名、宝塔、个人页面搭建</title>
      <link href="/2022/12/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E7%BD%91%E9%A1%B5%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/12/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E7%BD%91%E9%A1%B5%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><span class="hide-inline"><button type="button" class="hide-button" style="background-color: bg;color: color">display  </button><span class="hide-content">content</span></span><div class="hide-block"><button type="button" class="hide-button" style="background-color: bg;color: color">display    </button><div class="hide-content"><p>content</p></div></div><details class="toggle" style="border: 1px solid bg"><summary class="toggle-button" style="background-color: bg;color: color">display</summary><div class="toggle-content"><p>content</p></div></details><div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg"><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg"><br><img src="https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg"><br><img src="https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg"><br><img src="https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg"><br><img src="https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg"><br><img src="https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg"><br><img src="https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg"></p>          </div><h3 id="域名备案"><a href="#域名备案" class="headerlink" title="域名备案"></a>域名备案</h3><h3 id="远程链接"><a href="#远程链接" class="headerlink" title="远程链接"></a>远程链接</h3><pre><code>服务器的远程链接是通过SSH链接的，</code></pre><h4 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo su root 切换root账号</span><br><span class="line">挂载</span><br><span class="line">$ yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/installinstall_6.0.sh &amp;&amp; sh install.sh;</span><br><span class="line">安装宝塔面板，最好去官网看看</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="重新登陆时候"><a href="#重新登陆时候" class="headerlink" title="重新登陆时候"></a>重新登陆时候</h4><pre><code>切换：sudo -i</code></pre>]]></content>
      
      
      <categories>
          
          <category> 网页部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Picgo + github + Typora搭建图床</title>
      <link href="/2022/12/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2022/12/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>   图床就是提供图片外链的服务，在开发过程中，我们需要专门用来存<br>   放图片的服务器，所以需要搭建一个图床，使用Picgo + github + Typora<br>   可以搭建个免费的图床，毕竟免费的才是最香的嘛</p><h2 id="Picgo安装"><a href="#Picgo安装" class="headerlink" title="Picgo安装"></a>Picgo安装</h2><pre><code>可以通过 https://picgo.github.io/PicGo-Doc/ 链接去官网下载也可以去github上找到PicGo源码进行安装，直接搜索PicGo就行picgo配置</code></pre><img src="https://github.com/anbition123/picgo1/blob/main/img/tempsnip.png?raw=true" width = "700px" height="500px" alt="picgo配置"/><img>## Typora安装<pre><code>去Typora官网下载安装，免费版的就够用进入页面点击文件 --&gt;偏好设置 --&gt;图像 --&gt; 上传服务设置为Picgo(app),picgo路径设置为picgo的应用程序（****\PicGo.exe) 点击 验证图片上传选项查看路径是否正确</code></pre><img src="https://github.com/anbition123/picgo1/blob/main/tu_chuang/setTypora.PNG?raw=true" width = "700px" height="500px" alt="Typora配置"/>   <h2 id="新建GitHub项目"><a href="#新建GitHub项目" class="headerlink" title="新建GitHub项目"></a>新建GitHub项目</h2><pre><code>1、在github上新建一个项目存储图片，新建时要添加README文件，2、新建Token,在github找到Settings,点击。找到Developer settings --&gt; Personal access tokens -&gt;Tokens(class) --&gt; Generate new token (classic)记得把token记录下来，因为只出现一次。</code></pre><h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><pre><code>将本地图片复制到Typora，右键--&gt; 上传图片，就可以在github项目中找到上传的图片</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><pre><code>1、不可上传在github同名的图片，所以可以打开时间戳命名，2、在github配置项中，可以在设置日志报错日志。3、如果路径出错可重设置token再运行一次。</code></pre><h2 id="免费图床"><a href="#免费图床" class="headerlink" title="免费图床"></a>免费图床</h2><p>   根据博主Xlenco的推荐，终于找到可以存储图片的的免费图床，<br>   此部分转载自博主Xlenco的博客内容，做个笔记，日后好查找<br>   1、<a href="https://sm.ms/">https://sm.ms/</a><br>    无需注册，海外服务器【免费】<br>   2、 <a href="https://www.superbed.cn/">https://www.superbed.cn/</a><br>   聚合图床      要注册，国内服务器【免费】<br>   3、<a href="https://moetu.org/">https://moetu.org/</a><br>   meotu        要注册，国内服务器【免费】<br>   4、<a href="https://www.z4a.net/">https://www.z4a.net/</a><br>   z4a 图床         要注册，国内服务器【免费】<br>   5、<a href="https://www.imgtp.com/">https://www.imgtp.com/</a><br>   imgtp        无需注册，国内服务器，最大支持 15MB【免费】<br>   6、<a href="https://www.imgbed.com/?lang=zh-CN">https://www.imgbed.com/?lang=zh-CN</a><br>   imgbed        无需注册，国内服务器，最大支持 20MB【免费】<br>   7、<a href="https://niupic.com/">https://niupic.com/</a><br>   牛图网         无需注册，日本服务器 【免费】<br>   8、<a href="https://imgbb.com/">https://imgbb.com/</a><br>   imgbb        无需注册，亚太服务器【免费】<br>   9、<a href="https://upload.cc/">https://upload.cc/</a><br>   upload        无需注册，海外服务器 【免费】<br>   10、<a href="https://catbox.moe/">https://catbox.moe/</a><br>   catbox        无需注册，海外服务器【免费】<br>   11、<a href="https://imgse.com/">https://imgse.com/</a><br>   路过图床         要注册，海外服务器【免费】<br>   12、<a href="https://imgtg.com/">https://imgtg.com/</a><br>   TG 图床         无需注册，国内外服务器【免费】<br>   13、<a href="https://postimages.org/">https://postimages.org/</a><br>   Postimages    无需注册，国外服务器速度快【免费】<br>   14、<a href="https://imgloc.com/">https://imgloc.com/</a><br>   imgloc        无需注册，国内服务器，最大支持 6MB【免费】</p>]]></content>
      
      
      <categories>
          
          <category> 图床搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Picgo </tag>
            
            <tag> github </tag>
            
            <tag> Typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片名字</title>
      <link href="/2022/11/04/%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%87%E5%90%8D%E5%AD%97/"/>
      <url>/2022/11/04/%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%87%E5%90%8D%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/anbition123/picgo1/master/img/279eeb2357d86faf79e9d6127306129.png" alt="图片名称七多少"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo + Butterfly主题搭建博客</title>
      <link href="/2022/11/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/11/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;Hexo 是一个快速、简洁且高效的博客框架,它使用 Markdown（或其他渲染引擎）解析文章。Butterfly 是 Hexo 的主题之一，也是本文将要进行集成的主题</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h3><p>&emsp;通过在 node 官方网站下载安装 地址：<a href="https://nodejs.org/zh-cn/download/">https://nodejs.org/zh-cn/download/</a> ，按照自己所需版本进行下载安装<br>node 安装好后,可通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>查看版本号</p><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><p>&emsp;可以去 Git 官网下载对应系统的软件，下载地址为 <a href="https://git-scm.com/">https://git-scm.com/</a> 或者 <a href="https://gitforwindows.org/">https://gitforwindows.org/</a><br>git 安装好后也可通过</p><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><h4 id="初始化-hexo"><a href="#初始化-hexo" class="headerlink" title="初始化 hexo"></a>初始化 hexo</h4><p>  在电脑上新建文件，使用编程软件打开文件，使用编程软件的终端，或者点击右键，使用git bash here命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>&emsp;打开谷歌浏览器 <a href="http://localhost:4000/">http://localhost:4000</a> 就能看到 hexo 的初始化页面</p><h4 id="指定端口"><a href="#指定端口" class="headerlink" title="指定端口"></a>指定端口</h4><p>&emsp;若要重新指定端口号，可在_config.yml 文件里加上,注意缩进和空格</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">    port: 4001  #端口号随意，默认是4000</span><br><span class="line">    compress: true</span><br><span class="line">    header: true</span><br></pre></td></tr></table></figure><pre><code>还可以用 hexo server -p 端口号</code></pre><h4 id="hexo-常用命令"><a href="#hexo-常用命令" class="headerlink" title="hexo 常用命令"></a>hexo 常用命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new title 新建一篇文章</span><br><span class="line">$ hexo generate 可以简写成 hexo g 用于生成静态文件</span><br><span class="line">$ hexo server 命令用于启动本地服务器，一般可以简写成 hexo s</span><br><span class="line">    可以加一些参数</span><br><span class="line">    -p    选项，指定服务器端口，默认为 4000</span><br><span class="line">    -i    选项，指定服务器 IP 地址，默认为 0.0.0.0</span><br><span class="line">    -s    选项，静态模式 ，仅提供 public 文件夹中的文件并禁用文件 监视</span><br><span class="line">$ hexo deploy 命令用于部署网站，一般可以简写成 hexo d</span><br><span class="line">$ hexo clean 命令用于清理缓存文件，是一个比较常用的命令</span><br><span class="line">$ hexo --safe 表示安全模式，用于禁用加载插件和脚本</span><br><span class="line">$ hexo --debug 表示调试模式，用于将消息详细记录到终端和 debug.log 文件</span><br><span class="line">$ hexo --silent  表示静默模式，用于静默输出到终端</span><br></pre></td></tr></table></figure><p>  &emsp;注：每次配置文件被修改都需要 重新执行 hexo clean、hexo generate、hexo server。<br>也可以直接在package.json文件中在server命令后加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;server&quot;: &quot;hexo clean &amp;&amp; hexo generate &amp;&amp; gulp &amp;&amp; hexo server&quot;</span><br></pre></td></tr></table></figure><h3 id="安装-Butterfly"><a href="#安装-Butterfly" class="headerlink" title="安装 Butterfly"></a>安装 Butterfly</h3><p>&emsp;可通过 <a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a> 查看 Butterfly 教程网站<br>使用 npm 安装 butterfly 主题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>  安装渲染器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="Butterfly-使用及配置"><a href="#Butterfly-使用及配置" class="headerlink" title="Butterfly 使用及配置"></a>Butterfly 使用及配置</h3><h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><p>  &emsp;找到根目录下的-config.yml文件，打开文件找到 theme 将配置改为butterfly</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme:butterfly</span><br></pre></td></tr></table></figure><p>  &emsp;再在根目录下新建一个 _config.butterfly.yml 文件<br>打开node_modules中找到 hexo-theme-butterfl 找到文件-config.yml，将内容复制到_config.butterfly.yml<br>文件中，这样就可以在_config.butterfly.yml配置了。</p><h4 id="配置页面"><a href="#配置页面" class="headerlink" title="配置页面"></a>配置页面</h4><p>&emsp;在根目录下，终端输入 hexo new page tags，这样就能生成一个页面你可以在 source/tags/index.md 找到这个文件，修改這個文件：<br>记得添加页面类型 type，(如：type: “tags”),<br>除了 type,还有 title:页面名称，date: 创建如期，cover：文章封面背景，版权信息等，<br>配置的内容写在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">  配置内容</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><p>  每个人喜欢的主题不一样，主要是看文档配置自己喜欢的的页面，所以我挑出自己的特点</p><h5 id="主题文章双栏"><a href="#主题文章双栏" class="headerlink" title="主题文章双栏"></a>主题文章双栏</h5><p>  1、安装 hexo-butterfly-article-double-row<br>记得加–save，不然本地预览的时候可能不会显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm安装：</span><br><span class="line">npm i hexo-butterfly-article-double-row --save</span><br><span class="line">cnpm安装：</span><br><span class="line">cnpm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure><pre><code>2、在根目录_config.yml 配置</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">butterfly_article_double_row:</span><br><span class="line"> enable: true</span><br></pre></td></tr></table></figure><h5 id="背景样式修改"><a href="#背景样式修改" class="headerlink" title="背景样式修改"></a>背景样式修改</h5><p>&emsp;1、首先在根目录下的 source 文件夹中添加一个文件夹，（如：css 文件夹），再在此文件架夹中添加 css 文件，（如 mycss.css),在检查-&gt;控制台找到元素类名，定义自己的样式。比如我设置了背景透明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    /* 文章页背景 */</span><br><span class="line">.layout_post&gt;#post &#123;</span><br><span class="line">    /* 以下代表透明度为0.5 可以自行修改*/</span><br><span class="line">    background: rgba(255,255,255,.8);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 所有页面背景 */</span><br><span class="line">#aside_content .card-widget, #recent-posts&gt;.recent-post-item, .layout_page&gt;div:first-child:not(.recent-posts), .layout_post&gt;#page, .layout_post&gt;#post, .read-mode .layout_post&gt;#post&#123;</span><br><span class="line">    /* 以下代表透明度为0.5 */</span><br><span class="line">    background: rgba(255,255,255,.8);</span><br><span class="line">&#125;</span><br><span class="line">/*侧边卡片的透明度 */</span><br><span class="line">:root &#123;</span><br><span class="line">--card-bg: rgba(255, 255, 255, .8);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;2、在_config.butterfly.yml 文件夹中配置 inject,使用外部外部引入的方式引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/mycss.css&quot;&gt;</span><br><span class="line">bottom:</span><br></pre></td></tr></table></figure><h2 id="git-版本管理"><a href="#git-版本管理" class="headerlink" title="git 版本管理"></a>git 版本管理</h2><h3 id="新建远程仓库"><a href="#新建远程仓库" class="headerlink" title="新建远程仓库"></a>新建远程仓库</h3><p>  &emsp;1、以 github为例，新建一个项目，博客一般都是私有的，所以private勾上<br>点击creat repository 新建，<br>  &emsp;2、在根目录下新建一个 gitignore的文件夹，因为有些文件我们是不需要的<br>我的 gitignore 目录有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.vscode/</span><br><span class="line">/.idea/</span><br><span class="line">.idea/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly.git|</span><br></pre></td></tr></table></figure><p> 3、在终端执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;备注&quot;</span><br><span class="line">$ git branch -M main</span><br><span class="line">$ git remote add origin https://github.com/....</span><br><span class="line">$ git push -u origin main</span><br></pre></td></tr></table></figure><p>  &emsp;这样就能把本地的代码推到远程的分支上。<br>  &emsp;然后要注意在部署的时候用到 hexo d -g.这样就能进行我们的版本管理了</p><h2 id="侧边栏时钟挂件"><a href="#侧边栏时钟挂件" class="headerlink" title="侧边栏时钟挂件"></a>侧边栏时钟挂件</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>  &emsp;根据博主安知鱼大佬发布的npm1.0.5版本，安装配置如下<br>&emsp;第一步如果有安装官网上的侧边栏时钟，在根目录下先卸载。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-butterfly-clock</span><br></pre></td></tr></table></figure><p>&emsp;第二步安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-butterfly-clock-anzhiyu --save</span><br></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>&emsp;第三步配置文件，在_config.yml 或者_config.butterfly.yml 中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">electric_clock:</span><br><span class="line">  enable: true # 开关</span><br><span class="line">  priority: 5 #过滤器优先权</span><br><span class="line">  enable_page: all # 应用页面</span><br><span class="line">  exclude:</span><br><span class="line">    # - /posts/</span><br><span class="line">    # - /about/</span><br><span class="line">  layout: # 挂载容器类型</span><br><span class="line">    type: class</span><br><span class="line">    name: sticky_layout</span><br><span class="line">    index: 0</span><br><span class="line">  loading: https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/loading.gif #加载动画自定义</span><br><span class="line">  clock_css: https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/clock.min.css</span><br><span class="line">  clock_js: https://cdn.cbd.int/hexo-butterfly-clock-anzhiyu/lib/clock.min.js</span><br><span class="line">  ip_api: https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0</span><br><span class="line">  qweather_key: # 和风天气key</span><br><span class="line">  gaud_map_key: # 高得地图web服务key</span><br><span class="line">  default_rectangle: false # 开启后将一直显示rectangle位置的天气，否则将获取访问者的地理位置与天气</span><br><span class="line">  rectangle: 112.982279,28.19409 # 获取访问者位置失败时会显示该位置的天气，同时该位置为开启default_rectangle后的位置</span><br></pre></td></tr></table></figure><h3 id="qweather-key-的申请和-qweather-key-的申请"><a href="#qweather-key-的申请和-qweather-key-的申请" class="headerlink" title="qweather_key 的申请和 qweather_key 的申请"></a>qweather_key 的申请和 qweather_key 的申请</h3><p>&emsp;qweather_key 和 gaud_map_key 需要自己配置，如果没有则默认使用安知鱼博主的 key,但只能调用一万次，所以<br>&emsp;可能会存在限制。<br>&emsp;qweather_key 申请地址: <a href="https://id.qweather.com/#/login">https://id.qweather.com/#/login</a><br>&emsp;gaud_map_key 申请地址: <a href="https://lbs.amap.com/">https://lbs.amap.com/</a></p><p>&emsp;qweather_key 申请步骤<br>&emsp;点击链接 <a href="https://id.qweather.com/#/login%EF%BC%8C">https://id.qweather.com/#/login，</a><br>&emsp;注册并登录。进入和风天气开发者控制台 –&gt; 点击应用管理 –&gt; 创建应用 –&gt; 填写应用名称和 key 名称随意<br>&emsp;–&gt; 选择 WebApi –&gt; 重新进入控制台，点击自己新建的项目就可以拿到<br>&emsp;qweather_key 了。</p><p>&emsp;gaud_map_key 申请步骤<br>点击链接 <a href="https://lbs.amap.com/%EF%BC%8C">https://lbs.amap.com/，</a><br>先登录在注册。进入高德开放平台的控制台 –&gt; 创建应用，名称随意，类型选其他 –&gt; 点击添加, key 名称随意，服务平台选择 Web 服务,点击提交 –&gt;这样就能拿到 gaud_map_key 了。</p><h2 id="文章插入图片"><a href="#文章插入图片" class="headerlink" title="文章插入图片"></a>文章插入图片</h2><p>&emsp;我一开始没动要怎么加入图片，方法我都知道，摸索半天终于学会了，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、可通过 ![]()</span><br><span class="line">![图片名称](图片路径)</span><br><span class="line"></span><br><span class="line">2、使用&lt;img&gt;标签</span><br><span class="line">注意的是：要顶格写，不然没效果。</span><br></pre></td></tr></table></figure><h2 id="分类页和标签页"><a href="#分类页和标签页" class="headerlink" title="分类页和标签页"></a>分类页和标签页</h2><p>&emsp;在分类页面中，需要添加type和layout属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>&emsp;在需要被分类索引的页面添加 categories属性，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">categories: </span><br><span class="line"> - 博客搭建</span><br></pre></td></tr></table></figure><p>&emsp;在标签页面中，也需要添加type和layout属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>&emsp;在需要被标签索引的页面添加 tags属性，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">- hexo</span><br><span class="line">- Butterfly</span><br></pre></td></tr></table></figure><p>&emsp;这两个页面很相似，如何取舍看自己把握。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bug记录</title>
      <link href="/2022/11/03/page/"/>
      <url>/2022/11/03/page/</url>
      
        <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>初始博客页面</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css知识总结</title>
      <link href="/2021/03/04/css%E6%A8%A1%E5%9D%97/css%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/03/04/css%E6%A8%A1%E5%9D%97/css%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p>实行的是</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue全家桶</title>
      <link href="/2021/03/04/vue%E5%85%A8%E5%AE%B6%E6%A1%B6/vue%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
      <url>/2021/03/04/vue%E5%85%A8%E5%AE%B6%E6%A1%B6/vue%E5%85%A8%E5%AE%B6%E6%A1%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react全家桶</title>
      <link href="/2021/03/04/react%E5%85%A8%E5%AE%B6%E6%A1%B6/react%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
      <url>/2021/03/04/react%E5%85%A8%E5%AE%B6%E6%A1%B6/react%E5%85%A8%E5%AE%B6%E6%A1%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html知识汇总</title>
      <link href="/2021/02/04/html%E6%A8%A1%E5%9D%97/html5/"/>
      <url>/2021/02/04/html%E6%A8%A1%E5%9D%97/html5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaScript知识汇总</title>
      <link href="/2021/02/04/js%E6%A8%A1%E5%9D%97/js%E7%9B%98%E7%82%B9/"/>
      <url>/2021/02/04/js%E6%A8%A1%E5%9D%97/js%E7%9B%98%E7%82%B9/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> javaScript </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javaScript </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
