<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>服务器、域名、宝塔、个人页面搭建</title>
      <link href="/2022/12/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E7%BD%91%E9%A1%B5%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/12/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E7%BD%91%E9%A1%B5%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p>很多话很多话很多话很多话<br>很多话很多话很多话很多话<br>很多话很多话很多话很多话<br>很多话很多话很多话很多话<br>很多话很多话很多话很多话<br>很多话很多话很多话很多话<br>很多话很多话很多话很多话<br>很多话很多话很多话很多话</p><h3 id="域名备案"><a href="#域名备案" class="headerlink" title="域名备案"></a>域名备案</h3><h3 id="远程链接"><a href="#远程链接" class="headerlink" title="远程链接"></a>远程链接</h3><pre><code>服务器的远程链接是通过SSH链接的，</code></pre><h4 id="安装宝塔"><a href="#安装宝塔" class="headerlink" title="安装宝塔"></a>安装宝塔</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo su root 切换root账号</span><br><span class="line">挂载</span><br><span class="line">$ yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/installinstall_6.0.sh &amp;&amp; sh install.sh;</span><br><span class="line">安装宝塔面板，最好去官网看看</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="重新登陆时候"><a href="#重新登陆时候" class="headerlink" title="重新登陆时候"></a>重新登陆时候</h4><pre><code>切换：sudo -i</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Picgo + github + Typora搭建图床</title>
      <link href="/2022/12/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/2022/12/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>   图床就是提供图片外链的服务，在开发过程中，我们需要专门用来存<br>   放图片的服务器，所以需要搭建一个图床，使用Picgo + github + Typora<br>   可以搭建个免费的图床，毕竟免费的才是最香的嘛</p><h2 id="Picgo安装"><a href="#Picgo安装" class="headerlink" title="Picgo安装"></a>Picgo安装</h2><pre><code>可以通过 https://picgo.github.io/PicGo-Doc/ 链接去官网下载也可以去github上找到PicGo源码进行安装，直接搜索PicGo就行![picgo配置](https://github.com/anbition123/picgo1/blob/main/img/tempsnip.png?raw=true)</code></pre><h2 id="Typora安装"><a href="#Typora安装" class="headerlink" title="Typora安装"></a>Typora安装</h2><pre><code>去Typora官网下载安装，免费版的就够用进入页面点击文件 --&gt;偏好设置 --&gt;图像 --&gt; 上传服务设置为Picgo(app),picgo路径设置为picgo的应用程序（****\PicGo.exe) 点击 验证图片上传选项查看路径是否正确![Typora配置](https://github.com/anbition123/picgo1/blob/main/tu_chuang/setTypora.PNG?raw=true)</code></pre><h2 id="新建GitHub项目"><a href="#新建GitHub项目" class="headerlink" title="新建GitHub项目"></a>新建GitHub项目</h2><pre><code>1、在github上新建一个项目存储图片，新建时要添加README文件，2、新建Token,在github找到Settings,点击。找到Developer settings --&gt; Personal access tokens -&gt;Tokens(class) --&gt; Generate new token (classic)记得把token记录下来，因为只出现一次。</code></pre><h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><pre><code>将本地图片复制到Typora，右键--&gt; 上传图片，就可以在github项目中找到上传的图片</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><pre><code>1、不可上传在github同名的图片，所以可以打开时间戳命名，2、在github配置项中，可以在设置日志报错日志。3、如果路径出错可重设置token再运行一次。</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图片名字</title>
      <link href="/2022/11/04/%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%87%E5%90%8D%E5%AD%97/"/>
      <url>/2022/11/04/%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%87%E5%90%8D%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/anbition123/picgo1/master/img/279eeb2357d86faf79e9d6127306129.png" alt="图片名称七多少"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo + Butterfly主题搭建博客</title>
      <link href="/2022/11/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/11/03/%E4%BB%A3%E7%A0%81%E5%9D%97%E6%BC%94%E7%A4%BA/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo 是一个快速、简洁且高效的博客框架,它使用Markdown（或其他渲染引擎）解析文章。Butterfly是Hexo的主题之一，也是本文将要进行集成的主题</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h3><pre><code>通过在node官方网站下载安装  地址：https://nodejs.org/zh-cn/download/ ，按照自己所需版本进行下载安装</code></pre><p>node安装好后,可通过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v </span><br></pre></td></tr></table></figure><p>查看版本号</p><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3><pre><code>可以去 Git 官网下载对应系统的软件，下载地址为 https://git-scm.com/ 或者 https://gitforwindows.org/</code></pre><p>git安装好后也可通过</p><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3><h4 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h4><pre><code>在电脑上新建文件，使用编程软件打开文件，使用编程软件的终端，或者点击右键，使用git bash here命令</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ cd blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p> 打开谷歌浏览器 <a href="http://localhost:4000/">http://localhost:4000</a> 就能看到 hexo的初始化页面</p><h4 id="指定端口"><a href="#指定端口" class="headerlink" title="指定端口"></a>指定端口</h4><pre><code>若要重新指定端口号，可在_config.yml文件里加上,注意缩进和空格</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">    port: 4001  #端口号随意，默认是4000</span><br><span class="line">    compress: true</span><br><span class="line">    header: true</span><br></pre></td></tr></table></figure><pre><code>还可以用 hexo server -p 端口号</code></pre><h4 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new title 新建一篇文章</span><br><span class="line">$ hexo generate 可以简写成 hexo g 用于生成静态文件</span><br><span class="line">$ hexo server 命令用于启动本地服务器，一般可以简写成 hexo s</span><br><span class="line">    可以加一些参数</span><br><span class="line">    -p    选项，指定服务器端口，默认为 4000</span><br><span class="line">    -i    选项，指定服务器 IP 地址，默认为 0.0.0.0</span><br><span class="line">    -s    选项，静态模式 ，仅提供 public 文件夹中的文件并禁用文件 监视</span><br><span class="line">$ hexo deploy 命令用于部署网站，一般可以简写成 hexo d</span><br><span class="line">$ hexo clean 命令用于清理缓存文件，是一个比较常用的命令</span><br><span class="line">$ hexo --safe 表示安全模式，用于禁用加载插件和脚本</span><br><span class="line">$ hexo --debug 表示调试模式，用于将消息详细记录到终端和 debug.log 文件</span><br><span class="line">$ hexo --silent  表示静默模式，用于静默输出到终端</span><br></pre></td></tr></table></figure><pre><code>注：每次配置文件被修改都需要 重新执行 hexo clean、hexo generate、hexo server。也可以直接在package.json文件中在server命令后加</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;server&quot;: &quot;hexo clean &amp;&amp; hexo generate &amp;&amp; gulp &amp;&amp; hexo server&quot;</span><br></pre></td></tr></table></figure><h3 id="安装-Butterfly"><a href="#安装-Butterfly" class="headerlink" title="安装 Butterfly"></a>安装 Butterfly</h3><pre><code>可通过 https://butterfly.js.org/posts/21cfbf15/ 查看 Butterfly 教程网站使用 npm 安装 butterfly 主题 </code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><pre><code>安装渲染器</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h3 id="Butterfly使用及配置"><a href="#Butterfly使用及配置" class="headerlink" title="Butterfly使用及配置"></a>Butterfly使用及配置</h3><h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><pre><code>找到根目录下的-config.yml文件，打开文件找到 theme 将配置改为butterfly </code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme:butterfly</span><br></pre></td></tr></table></figure><pre><code>再在根目录下新建一个 _config.butterfly.yml 文件打开node_modules中找到 hexo-theme-butterfl 找到文件-config.yml，将内容复制到_config.butterfly.yml文件中，这样就可以在_config.butterfly.yml配置了。</code></pre><h4 id="配置页面"><a href="#配置页面" class="headerlink" title="配置页面"></a>配置页面</h4><p>在根目录下，终端输入hexo new page tags，这样就能生成一个页面你可以在source/tags/index.md找到这个文件，修改這個文件：<br>记得添加页面类型type，(如：type: “tags”),<br>除了type,还有 title:页面名称，date: 创建如期，cover：文章封面背景，版权信息等，<br>    配置的内容写在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">    配置内容</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><pre><code>每个人喜欢的主题不一样，主要是看文档配置自己喜欢的的页面，所以我挑出自己的特点</code></pre><h5 id="主题文章双栏"><a href="#主题文章双栏" class="headerlink" title="主题文章双栏"></a>主题文章双栏</h5><pre><code>1、安装 hexo-butterfly-article-double-row记得加--save，不然本地预览的时候可能不会显示</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm安装：</span><br><span class="line">npm i hexo-butterfly-article-double-row --save </span><br><span class="line">cnpm安装：</span><br><span class="line">cnpm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure><pre><code>2、在根目录_config.yml 配置</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">butterfly_article_double_row:</span><br><span class="line"> enable: true</span><br></pre></td></tr></table></figure><h5 id="背景样式修改"><a href="#背景样式修改" class="headerlink" title="背景样式修改"></a>背景样式修改</h5><pre><code>1、首先在根目录下的source文件夹中添加一个文件夹，（如：css文件夹），再在此文件架夹中添加css文件，（如mycss.css),在检查-&gt;控制台找到元素类名，定义自己的样式。比如我设置了背景透明</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    /* 文章页背景 */</span><br><span class="line">.layout_post&gt;#post &#123;</span><br><span class="line">    /* 以下代表透明度为0.5 可以自行修改*/</span><br><span class="line">    background: rgba(255,255,255,.8);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 所有页面背景 */</span><br><span class="line">#aside_content .card-widget, #recent-posts&gt;.recent-post-item, .layout_page&gt;div:first-child:not(.recent-posts), .layout_post&gt;#page, .layout_post&gt;#post, .read-mode .layout_post&gt;#post&#123;</span><br><span class="line">    /* 以下代表透明度为0.5 */</span><br><span class="line">    background: rgba(255,255,255,.8);</span><br><span class="line">&#125;</span><br><span class="line">/*侧边卡片的透明度 */</span><br><span class="line">:root &#123;</span><br><span class="line">--card-bg: rgba(255, 255, 255, .8);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、在_config.butterfly.yml文件夹中配置inject,使用外部外部引入的方式引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/mycss.css&quot;&gt;     </span><br><span class="line">bottom:</span><br></pre></td></tr></table></figure><h2 id="gulp打包"><a href="#gulp打包" class="headerlink" title="gulp打包"></a>gulp打包</h2><h2 id="使用git版本管理上传GitHub"><a href="#使用git版本管理上传GitHub" class="headerlink" title="使用git版本管理上传GitHub"></a>使用git版本管理上传GitHub</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bug记录</title>
      <link href="/2022/11/03/page/"/>
      <url>/2022/11/03/page/</url>
      
        <content type="html"><![CDATA[<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>初始博客页面</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
